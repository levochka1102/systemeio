# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    taxNumberValidationRegexp: '/^((DE)?[0-9]{9}|(IT)?[0-9]{11}|(GR)?[0-9]{9}|(FR)?[A-Z]{2}[0-9]{9})$/'
    couponTypes:
        /^\d+\s*\%$/: 'App\Coupon\Lib\PercentageCouponType'
        /^\d+$/: 'App\Coupon\Lib\FixedCouponType'
    vat:
        DE: 19
        IT: 22
        FR: 20
        GR: 24
    paymentProcessors:
        paypal: 'payment_processor.paypal'
        stripe: 'payment_processor.stripe'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Payment\Lib\PaymentProcessorFactory\Implementation\SymfonyParametersPaymentProcessorFactory:
        arguments:
            $container: '@service_container'
    
    payment_processor.paypal:
        class: 'App\Payment\Lib\PaymentProcessor\Implementation\PaypalPaymentProcessor'
        autowire: false
        public: true
        arguments:
            $paymentProcessor: '@payment_processor.systemeio.paypal'

    payment_processor.systemeio.paypal:
        class: 'Systemeio\TestForCandidates\PaymentProcessor\PaypalPaymentProcessor'

    payment_processor.stripe:
        class: 'App\Payment\Lib\PaymentProcessor\Implementation\StripePaymentProcessor'
        autowire: false
        public: true
        arguments:
            $paymentProcessor: '@payment_processor.systemeio.stripe'

    payment_processor.systemeio.stripe:
        class: 'Systemeio\TestForCandidates\PaymentProcessor\StripePaymentProcessor'

